<html>
<head>
    <meta charset="utf-8">
    <title>FedBak</title>
    <link rel="stylesheet" href="https://unpkg.com/element-ui/lib/theme-chalk/index.css">
    <script src="http://v3.jiathis.com/code_mini/jia.js"></script>
</head>
<body>
    <div id="app">
        <div id="wrap-banner">
            <div id="loginContainer">
                <el-card class="box-card">
                    <div slot="header" class="clearfix login-title">
                        <span>丢了么</span>
                    </div>
                    <div id="login-form" v-if="!register" ref="login">
                        <el-form ref="loginform" :model="loginform" :rules="loginrule">
                            <el-form-item prop="username">
                                <el-input icon="fa-user-circle" type="text" v-model="loginform.username" autoComplete="false"
                                          autofocus placeholder="请输入账号"></el-input>
                            </el-form-item>
                            <el-form-item prop="password">
                                <el-input type="password" v-model="loginform.password" autoComplete="false"
                                          icon="fa-lock" placeholder="请输入密码"></el-input>
                            </el-form-item>
                            <el-form-item class="verification">
                                <div id="login_verification_code_id" style="width: 400px"></div>
                            </el-form-item>
                            <el-form-item class="login-button">
                                <el-button style="width: 100%" type="success" :loading="logining" @@click.native.prevent="login">登录</el-button>
                            </el-form-item>
                        </el-form>
                        <el-button type="text" @@click="changeview(1)">
                            <span style="float: right; margin-top: -20px">
                                <i class="fa fa-address-book"></i> 去注册
                            </span>
                        </el-button>
                    </div>
                    <div id="register-form" v-else-if="register === 1" ref="register">
                        <!-- 此段必须要引入 -->
                        <div id="_umfp" style="display:inline;width:1px;height:1px;overflow:hidden"></div>
                        <el-form ref="registerform" :model="registerform" :rules="registerrule">
                            <el-form-item prop="accountreg">
                                <el-input icon="fa-user-circle" type="text" v-model="registerform.accountreg" autoComplete="false"
                                          autofocus placeholder="请输入账号"></el-input>
                            </el-form-item>
                            <el-form-item prop="usernamereg">
                                <el-input icon="fa-user-o" type="text" v-model="registerform.usernamereg" autoComplete="false"
                                          placeholder="请输入用户名"></el-input>
                            </el-form-item>
                            <el-form-item prop="emailreg">
                                <el-input icon="fa-envelope-o" type="text" v-model="registerform.emailreg" autoComplete="false"
                                          placeholder="请输入邮箱"></el-input>
                            </el-form-item>
                            <el-form-item prop="passwordreg">
                                <el-input icon="fa-lock" type="password" v-model="registerform.passwordreg" autoComplete="false"
                                          placeholder="请输入密码"></el-input>
                            </el-form-item>
                            <el-form-item prop="passwordAgain">
                                <el-input icon="fa-key" type="password" v-model="registerform.passwordAgain" autoComplete="false"
                                          placeholder="请再一次输入密码"></el-input>
                            </el-form-item>
                            <el-form-item prop="name">
                                <el-input icon="fa-key" type="text" v-model="registerform.name" autoComplete="false"
                                          placeholder="请输入姓名"></el-input>
                            </el-form-item>
                            <el-form-item prop="gender">
                                <el-select v-model="registerform.gender" placeholder="请选择性别">
                                    <el-option value="男" label="男">
                                    </el-option>
                                    <el-option value="女" label="女">
                                    </el-option>
                                </el-select>
                            </el-form-item>
                            <el-form-item prop="age">
                                <el-input icon="fa-key" type="text" v-model="registerform.age" autoComplete="false"
                                          placeholder="请输入年龄"></el-input>
                            </el-form-item>
                            <el-form-item prop="school">
                                <el-input icon="fa-key" type="text" v-model="registerform.school" autoComplete="false"
                                          placeholder="请输入学校"></el-input>
                            </el-form-item>
                            <el-form-item prop="phone">
                                <el-input icon="fa-key" type="text" v-model="registerform.phone" autoComplete="false"
                                          placeholder="请输入电话号码"></el-input>
                            </el-form-item>
                            <el-form-item prop="address">
                                <el-input icon="fa-key" type="text" v-model="registerform.address" autoComplete="false"
                                          placeholder="请输入地址"></el-input>
                            </el-form-item>
                            <el-form-item class="verification">
                                <div id="verification_code_id" style="width: 400px"></div>
                            </el-form-item>
                            <el-form-item class="register-button">
                                <el-button style="width: 100%" type="success" :loading="registering" @@click.native.prevent="userRegister">注册</el-button>
                            </el-form-item>
                        </el-form>
                        <el-button type="text" @@click="changeview(0)">
                            <span style="float: right; margin-top: -20px">
                                <i class="fa fa-user-o"></i> 去登录
                            </span>
                        </el-button>
                    </div>
                    <div id="forget-form" v-else-if="register === 2" ref="forgetps">
                        <el-form ref="forgetform" :model="forgetform" :rules="forgetrule">
                            <el-form-item prop="mailbox">
                                <el-input icon="fa-envelope-o" type="text" v-model="forgetform.mailbox" autoComplete="false"
                                          placeholder="请输入注册邮箱" style="width:250px;float:left">
                                </el-input>
                                <el-button style="width:50px;height:36px;float:right;margin:0;padding:0" type="success" :disabled="disableSend" :loading="sending" @@click.native.prevent="sendMail">{{sendContent}}</el-button>
                            </el-form-item>
                            <el-form-item prop="password">
                                <el-input icon="fa-lock" type="text" v-model="forgetform.password" autoComplete="false"
                                          placeholder="请输入新密码"></el-input>
                            </el-form-item>
                            <el-form-item prop="passwordAgain">
                                <el-input icon="fa-key" type="password" v-model="forgetform.passwordAgain" autoComplete="false"
                                          placeholder="请再一次输入密码"></el-input>
                            </el-form-item>
                            <el-form-item prop="verificationCode">
                                <el-input icon="fa-telegram" type="text" v-model="forgetform.verificationCode" autoComplete="false"
                                          placeholder="请输入验证码"></el-input>
                            </el-form-item>
                            <el-form-item class="verification">
                                <div id="forget_verification_code_id" style="width: 400px"></div>
                            </el-form-item>
                            <el-form-item class="forget-button">
                                <el-button style="width: 100%" type="success" :loading="resetting" @@click.native.prevent="resetPassword">确认重置</el-button>
                            </el-form-item>
                        </el-form>
                        <el-button type="text" @@click="changeview(0)">
                            <span style="float: right; margin-top: -20px">
                                <i class="fa fa-user-o"></i> 去登录
                            </span>
                        </el-button>
                    </div>
                </el-card>
            </div>
        </div>
    </div>
    <style>

        ul.el-menu {
            padding-left: 40px;
        }

        #notification ul.el-menu div {
            max-height: 400px;
            overflow: auto;
        }

        #notification .notice .user {
            display: inline-block;
            max-width: 60px;
            overflow: hidden
        }

        #notification .notice .questionTitle {
            display: inline-block;
            max-width: 100px;
            overflow: hidden
        }

        #notification .notice .answerTime {
            padding-left: 10px;
            overflow: hidden;
            display: inline-block;
            max-width: 100px
        }

        #notification, #personInfo, #register-menu-item, #login-menu-item {
            float: right;
        }

        #notification {
            margin-right: 10px;
        }

        #personInfo, #register-menu-item {
            margin-right: 65px;
        }

        .top-header-img {
            width: 30px;
            height: 30px;
            border-radius: 50%;
            vertical-align: middle;
        }

        #question-list {
            margin-left: 5%;
            margin-right: 5%;
            width: 90%;
            #loginContainer

        {
            font-family: 'Avenir', Helvetica, Arial, sans-serif;
            -webkit-font-smoothing: antialiased;
            -moz-osx-font-smoothing: grayscale;
            text-align: center;
            color: #2c3e50;
            margin: 123px auto;
            width: 350px;
            border: 1px solid #eaeaea;
            box-shadow: 0 0 25px #cac6c6;
            z-index: 1;
        }

        #loginContainer button span {
            color: white;
            font-size: 20px;
            line-height: 1;
        }

        .login-title {
            text-align: center;
        }

        #loginContainer .login-title span {
            font-family: "Arial","Microsoft YaHei","黑体","宋体",sans-serif;
            color: dodgerblue;
            font-size: 2em;
            line-height: 36px;
        }

        #wrap-banner {
            position: relative;
            -webkit-align-items: center;
            -ms-flex-align: center;
            align-items: center;
            display: -webkit-flex;
            display: flex;
            height: 100%;
            justify-content: center;
        }

       
    </style>
    <!-- built files will be auto injected -->
    <script src="https://code.jquery.com/jquery-3.2.1.min.js"></script>
    <script src="~/js/test/ajax.js"></script>
    <script src="https://unpkg.com/vue/dist/vue.js"></script>
    <script src="https://unpkg.com/element-ui/lib/index.js"></script>
    <script src="//aeu.alicdn.com/js/cj/109.js" id="AWSC_uabModule"></script>
    <script type="text/javascript" class="nc-required-js-1 nc-umid-script" src="//g.alicdn.com/security/umscript/3.3.2/um.js"></script>
    <script type="text/javascript" class="nc-required-js-1 nc-uab-script" src="//af.alicdn.com/js/uac.js?_t=212358"></script>
    <script src="~/js/Main/topheadercomponent.js"></script>
    <script>
        new Vue({
            el: '#app',
            data: function () {
                const validatePass2 = (rule, value, callback) => {
                    if (value === '') {
                        callback(new Error('请再次输入密码'))
                    } else if (value !== this.registerform.passwordreg) {
                        callback(new Error('两次输入密码不一致!'))
                    } else {
                        callback()
                    }
                }
                const validateNewPass2 = (rule, value, callback) => {
                    if (value === '') {
                        callback(new Error('请再次输入密码'))
                    } else if (value !== this.forgetform.password) {
                        callback(new Error('两次输入密码不一致!'))
                    } else {
                        callback()
                    }
                }
                const validateloginUserName = (rule, value, callback) => {
                    console.log("validateloginUserName")
                    if (value === '') {
                        callback(new Error('请输入账号!'))
                    } else {
                        ajaxPost("/Login/accountRepeatable", {account:value}, function (data) {
                            if (data.code == 200) {
                                console.log(data.result)
                                if (!data.result) {
                                    console.log("here")
                                    callback(new Error('该账号已经存在，请尝试新的账号!'))
                                }
                                callback()
                                
                            }
                            
                        })
                    }
                }
                const validatemailreg = (rule, value, callback) => {
                    console.log("validatemailreg")
                    let mailReg = /^\w+((-\w+)|(\.\w+))*\@@[A-Za-z0-9]+((\.|-)[A-Za-z0-9]+)*\.[A-Za-z0-9]+$/;
                    if (value === '') {
                        callback(new Error('请输入邮箱!'))
                    }
                    else if (!mailReg.test(value)) {
                        callback(new Error('邮箱格式不正确'))
                    }
                    callback()
                    /*else {
                        validateMailbox(value).then((response) => {
                            if (response.status === '200') {
                                if (response.result === false) {
                                    callback(new Error('该邮箱不存在，请确认邮箱是否输入正确!'))
                                }
                            }
                            callback()
                        })
                    }*/
                }
                
                return {
                    loginform: {
                        username: '',
                        password: ''
                    },
                    loginrule: {
                        username: [
                            { required: true, message: '请输入账号', trigger: 'blur' }
                        ],
                        password: [
                            { required: true, message: '请输入密码', trigger: 'blur' }
                        ]
                    },
                    logining: false,
                    register: 0,
                    forget: false,
                    registerform: {
                        accountreg: '',
                        usernamereg: '',
                        emailreg: '',
                        passwordreg: '',
                        passwordAgain: '',
                        name: '',
                        age: '',
                        gender:'',
                        school: '',
                        phone: '',
                        address:''
                        
                    },
                    registerrule: {
                        accountreg: [
                            { validator: validateloginUserName, trigger: 'blur' }
                        ],
                        usernamereg: [
                            { required: true, message: '请输入用户名', trigger: 'blur' }
                        ],
                        emailreg: [
                            { validator: validatemailreg, trigger: 'blur' }
                        ],
                        passwordreg: [
                            { required: true, message: '请输入密码', trigger: 'blur' }
                        ],
                        passwordAgain: [
                            { validator: validatePass2, trigger: 'blur' }
                        ],
                        name: [
                            { required: true, message: '请输入姓名', trigger: 'blur' }
                        ],
                        age: [
                            { required: true, message: '请输入年龄', trigger: 'blur' }
                        ],
                        school: [
                            { required: true, message: '请输入学校', trigger: 'blur' }
                        ],
                        phone: [
                            { required: true, message: '请输入电话号码', trigger: 'blur' }
                        ],
                        address: [
                            { required: true, message: '请输入地址', trigger: 'blur' }
                        ]
                    

                  
                    },
                    registering: false,
                    registerVerification: false,
                    loginVerification: false,
                    forgetVerification: false,
                    forgetform: {
                        mailbox: '',
                        password: '',
                        passwordAgain: '',
                        verificationCode: ''
                    },
                    forgetrule: {
                        /*mailbox: [
                            { validator: validatemailbox, trigger: 'blur' }
                        ],*/
                        password: [
                            { required: true, message: '请输入新密码', trigger: 'blur' }
                        ],
                        passwordAgain: [
                            { validator: validateNewPass2, trigger: 'blur' }
                        ],
                        verificationCode: [
                            { required: true, message: '请输入验证码', trigger: 'blur' }
                        ]
                    },
                    resetting: false,
                    sending: false,
                    disableSend: false,
                    sendContent: '发送'
                }
            },
            methods: {
                changeview(num) {
                    if (this.$refs.loginform !== undefined)
                        this.$refs.loginform.resetFields()
                    if (this.$refs.registerform !== undefined)
                        this.$refs.registerform.resetFields()
                    if (this.$refs.forgetform !== undefined)
                        this.$refs.forgetform.resetFields()
                    this.register = num

                },
                login(ev) {
                    let _this = this
                    this.$refs.loginform.validate((valid) => {
                        if (valid) {
                            _this.logining = true
                            ajaxPost("/Login/testlogin", _this.loginform, function (data) { 
                                if (data.comfirm == "true") {
                                    _this.$message({
                                        message: '登录成功!',
                                        type: 'success',
                                        duration: 5000
                                    })
                                    _this.logining = false
                                    if (window.localStorage) {
                                        window.localStorage.removeItem("username")
                                        window.localStorage.removeItem("avatarURL")
                                        window.localStorage.removeItem("id")
                                        window.localStorage.removeItem("account")
                                        window.localStorage["username"] = data.userinfo.username
                                        window.localStorage["avatarURL"] = data.userinfo.avatarURL
                                        window.localStorage["id"] = data.userinfo.id
                                        window.localStorage["account"] = data.userinfo.account
                                    } else { 
                                        _this.$message({
                                            message: '您的浏览器不支持localstorage!',
                                            type: 'error',
                                            duration: 5000
                                        })
                                    }
                                    $(location).attr('href', '/Main/Main');
                                }
                                else {
                                    _this.$message({
                                        message: '登录失败!',
                                        type: 'error',
                                        duration: 2000
                                    })
                                    _this.logining = false
                                    
                                }
                            })
                        }
                    })
                },
                userRegister(ev) {
                    let _this = this
                    this.$refs.registerform.validate((valid) => {
                        if (valid) {
                            _this.registering = true
                            ajaxPost("/Login/register", _this.registerform, function (data) {
                                console.log(data.result)
                                console.log(data.code)
                                if (data.code == 200) {
                                    if (data.result) {
                                        _this.$message({
                                            message: '注册成功!',
                                            type: 'success',
                                            duration: 5000
                                        })
                                        _this.$refs.registerform.resetFields()

                                    }
                                    else {
                                        _this.$message({
                                            message: '注册失败!',
                                            type: 'error',
                                            duration: 2000
                                        })
                                        _this.$refs.registerform.resetFields()
                                    }

                                }
                                else {
                                    _this.$registering = false
                                    Message({
                                        message: '注册失败!',
                                        type: 'error',
                                        duration: 2000
                                    })
                                }      
                            })
                        }
                    })
                },
                sendMail(ev) {
                    let _this = this
                    this.$refs.forgetform.validate((valid) => {
                        if (valid) {
                            _this.disableSend = true
                            _this.sending = true
                            send(_this.forgetform.mailbox).then((response) => {
                                if (response.status === '201') {
                                    Message({
                                        message: '发送成功!',
                                        type: 'success',
                                        duration: 5000
                                    })
                                    _this.$refs.forgetform.resetFields()
                                } else {
                                    Message({
                                        message: '发送失败，请稍后重试!',
                                        type: 'error',
                                        duration: 1000
                                    })
                                }
                                _this.sending = false
                            }).catch((e) => {
                                Message({
                                    message: '发送失败，请稍后重试!',
                                    type: 'error',
                                    duration: 1000
                                })
                                _this.sending = false
                            })
                            let sec = 60;
                            for (let i = 0; i <= 60; i++) {
                                window.setTimeout(function () {
                                    if (sec !== 0) {
                                        _this.sendContent = '(' + sec + ')';
                                        sec--;
                                    } else {
                                        _this.sendContent = '发送'
                                        _this.disableSend = false
                                    }
                                }, i * 1000)
                            }
                        } else {
                            Message({
                                message: '请输入正确邮箱！',
                                type: 'error',
                                duration: 1000
                            })
                        }
                    })
                },
                resetPassword(ev) {
                    if (!this.forgetVerification) {
                        Message({
                            message: '请滑动滑块进行验证！',
                            type: 'error',
                            duration: 2000
                        })
                        return
                    }
                    let _this = this
                    this.$refs.forgetform.validate((valid) => {
                        if (valid) {
                            _this.resetting = true
                            reset(_this.forgetform.mailbox, _this.forgetform.password, _this.forgetform.verificationCode).then((response) => {
                                if (response.status === '201') {
                                    Message({
                                        message: '重置成功!',
                                        type: 'success',
                                        duration: 5000
                                    })
                                    _this.$refs.registerform.resetFields()
                                } else {
                                    Message({
                                        message: '重置失败，请稍后重试!',
                                        type: 'error',
                                        duration: 1000
                                    })
                                }
                                _this.registering = false
                            }).catch((e) => {
                                Message({
                                    message: '重置失败，请稍后重试!',
                                    type: 'error',
                                    duration: 1000
                                })
                                _this.resetting = false
                            })
                        }
                    })
                },
                resetRegisterForm() {
                    const _this = this
                    this.$nextTick(function () {
                        _this.$refs.registerform.resetFields()
                        _this.registerform.password = ''
                        _this.registerform.passwordAgain = ''
                        _this.initVerificationCode('verification_code_id', function (data) {
                            _this.registerVerification = true
                        })
                        this.registerVerification = false
                    })
                },
                resetLoginForm() {
                    const _this = this
                    this.$nextTick(function () {
                        _this.$refs.loginform.resetFields()
                        _this.initVerificationCode('login_verification_code_id', function (data) {
                            _this.loginVerification = true
                        })
                    })
                },
                resetForgetForm() {
                    const _this = this
                    this.$nextTick(function () {
                        _this.$refs.forgetform.resetFields()
                        _this.forgetform.password = ''
                        _this.forgetform.passwordAgain = ''
                        _this.forgetform.verificationCode = ''
                        _this.initVerificationCode('forget_verification_code_id', function (data) {
                            _this.forgetVerification = true
                        })
                    })
                },
                initVerificationCode(id, callback) {
                    const nc = new noCaptcha()
                    const nc_appkey = 'FFFF0000000001787D7C'  // 应用标识,不可更改
                    const nc_scene = 'register'  // 场景,不可更改
                    const nc_token = [nc_appkey, (new Date()).getTime(), Math.random()].join(':')
                    const nc_option = {
                        renderTo: '#' + id, // 渲染到该DOM ID指定的Div位置
                        appkey: nc_appkey,
                        scene: nc_scene,
                        token: nc_token,
                        trans: '{"name1":"code100"}', // 测试用，特殊nc_appkey时才生效，正式上线时请务必要删除；code0:通过;code100:点击验证码;code200:图形验证码;code300:恶意请求拦截处理
                        callback: callback
                    }
                    nc.init(nc_option)
                }
            },
            mounted: function () {
                /*this.register = parseInt(this.$route.query.register)
                if (this.register === 1) {
                    this.resetRegisterForm()
                } else if (this.register === 2) {
                    this.resetForgetForm()
                } else {
                    this.resetLoginForm()
                }*/
            },
            watch: {
                /*'$route'(to, from) {
                    this.register = parseInt(this.$route.query.register)
                    if (this.register === 1) {
                        this.resetRegisterForm()
                    } else if (this.register === 2) {
                        this.resetForgetForm()
                    } else {
                        this.resetLoginForm()
                    }
                }*/
            }
        })

    </script>

    <script></script>

</body>
</html>